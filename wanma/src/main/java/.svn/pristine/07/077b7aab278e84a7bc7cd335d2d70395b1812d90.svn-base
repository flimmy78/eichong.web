<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
					"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bluemobi.product.dao.RoleInclusionMapper">
	<resultMap type="RoleInclusionModel" id="result_roleInclusion">
		<result property="parentRoleId" column="parent_role_id" />
		<result property="roleId" column="role_id" />
		<result property="depth" column="depth" />
		<result property="createDate" column="create_date" />
		<result property="createUser" column="create_user" />
		<result property="lastUpdateDate" column="last_update_date" />
		<result property="lastUpdateUser" column="last_update_user" />
	</resultMap>

	<insert id="addRoleInclusion" parameterType="RoleInclusionModel"
		keyProperty="roleInclusion_id">
		insert into p_m_role_inclusion
		(
		parent_role_id,
		role_id,
		depth,
		create_user,
		last_update_user
		)
		values
		(
		#{parentRoleId},
		#{roleId},
		#{depth},
		#{createUser},
		#{lastUpdateUser}
		)
	</insert>

	<update id="modifyRoleInclusion" parameterType="RoleInclusionModel">
		update p_m_role_inclusion
		<set>
			<if test="parentRoleId!=null"> parent_role_id=#{parentRoleId}, </if>
			<if test="roleId!=null"> role_id=#{roleId}, </if>
			<if test="depth!=null"> depth=#{depth}, </if>
			last_update_date=sysdate(),
			<if test="lastUpdateUser!=null"> last_update_user=#{lastUpdateUser}, </if>
		</set>
		<where>
			parent_role_id =
			#{parentRoleId}
			and role_id = #{roleId}
		</where>
	</update>

	<delete id="removeRoleInclusion" parameterType="RoleInclusionModel">
		delete from p_m_role_inclusion
		<where>
			<if test="parentRoleId!=null"> and parent_role_id=#{parentRoleId} </if>
			<if test="roleId!=null"> and role_id=#{roleId}</if>
		</where>
	</delete>

	<select id="getAllSelfAndChildInc" parameterType="String"
		resultMap="result_roleInclusion">
		select parent_role_id,role_id,depth
		from
		p_m_role_inclusion
		where
		role_id
		in ( select
		pmri.role_id
		from
		p_m_role_inclusion pmri
		where
		pmri.parent_role_id =
		#{roleId})
	</select>

	<select id="getRealParentRole" parameterType="String"
		resultType="String">
		select parent_role_id from
		p_m_role_inclusion
		where
		role_id =
		#{roleId}
		and
		depth = 1
	</select>

	<select id="getAllParentRole" parameterType="String"
		resultMap="result_roleInclusion">
		select parent_role_id,role_id,depth
		from
		p_m_role_inclusion
		where
		role_id =
		#{roleId}
	</select>
</mapper>